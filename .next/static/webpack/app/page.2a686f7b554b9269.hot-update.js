"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/@emotion/react/jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\");\n/* harmony import */ var _components_CanvasModal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/components/CanvasModal */ \"(app-pages-browser)/./src/components/CanvasModal.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/** @jsxImportSource @emotion/react */ /* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nconst Canvas = ()=>{\n    _s();\n    const [polygons, setPolygons] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [selectedPolygonIndex, setSelectedPolygonIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"None\");\n    const [predictionRange, setPredictionRange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0.5);\n    const [scaleFactor, setScaleFactor] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1.0);\n    const [currentPolygon, setCurrentPolygon] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isWheelDown, setIsWheelDown] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [startPos, setStartPos] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const [fileContent, setFileContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [showModal, setShowModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [modalPos, setModalPos] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const [modalPolygonIndex, setModalPolygonIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [hoveredPolygonIndex, setHoveredPolygonIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const dragStart = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        x: 0,\n        y: 0\n    });\n    const img = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Image());\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let isVisible = false;\n        polygons.forEach((polygon)=>{\n            if (polygon.labelIndex === selectedPolygonIndex && polygon.prediction >= predictionRange) {\n                isVisible = true;\n            }\n        });\n        if (!isVisible) {\n            setSelectedPolygonIndex(\"None\");\n        }\n    }, [\n        predictionRange,\n        polygons,\n        selectedPolygonIndex\n    ]);\n    0;\n    const getColorForPolygon = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((labelIndex)=>{\n        const colors = [\n            \"rgba(255, 0, 0, 0.5)\",\n            \"rgba(255, 140, 0, 0.5)\",\n            \"rgba(255, 255, 0, 0.5)\",\n            \"rgba(0, 255, 0, 0.5)\",\n            \"rgba(0, 0, 255, 0.5)\",\n            \"rgba(255, 153, 504, 0.5)\"\n        ];\n        return colors[labelIndex % colors.length];\n    }, []);\n    const increaseOpacity = (color)=>{\n        const [r, g, b, a] = color.match(/\\d+/g).map(Number);\n        const increasedOpacity = Math.min(a + 0.2, 1);\n        return \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(increasedOpacity, \")\");\n    };\n    const drawPolygon = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((polygon, ctx)=>{\n        if (polygon.prediction < predictionRange) {\n            return;\n        }\n        let fillColor = polygon.color;\n        if (polygon.labelIndex === selectedPolygonIndex || polygon.labelIndex === modalPolygonIndex || hoveredPolygonIndex === polygon.labelIndex) {\n            fillColor = increaseOpacity(fillColor);\n        }\n        ctx.beginPath();\n        polygon.points.forEach((param, index)=>{\n            let [x, y] = param;\n            const adjustedX = x * img.current.width;\n            const adjustedY = y * img.current.height;\n            if (index === 0) {\n                ctx.moveTo(adjustedX, adjustedY);\n            } else {\n                ctx.lineTo(adjustedX, adjustedY);\n            }\n        });\n        ctx.closePath();\n        ctx.fillStyle = fillColor;\n        ctx.fill();\n        ctx.stroke();\n        const centroid = polygon.points.reduce((acc, param)=>{\n            let [x, y] = param;\n            acc.x += x;\n            acc.y += y;\n            return acc;\n        }, {\n            x: 0,\n            y: 0\n        });\n        centroid.x = centroid.x / polygon.points.length * img.current.width * scaleFactor + startPos.x;\n        centroid.y = centroid.y / polygon.points.length * img.current.height * scaleFactor + startPos.y;\n        if (polygon.tag || polygon.description) {\n            ctx.font = \"16px Arial\";\n            ctx.fillStyle = \"black\";\n            ctx.textAlign = \"center\";\n            let textToDisplay = polygon.tag;\n            ctx.fillText(textToDisplay, centroid.x, centroid.y);\n        }\n    }, [\n        predictionRange,\n        selectedPolygonIndex,\n        modalPolygonIndex,\n        hoveredPolygonIndex,\n        scaleFactor,\n        startPos,\n        img\n    ]);\n    const drawCurrentPolygon = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((ctx)=>{\n        if (currentPolygon.length > 0) {\n            ctx.beginPath();\n            currentPolygon.forEach((param, index)=>{\n                let [x, y] = param;\n                if (index === 0) {\n                    ctx.moveTo(x * img.current.width, y * img.current.height);\n                } else {\n                    ctx.lineTo(x * img.current.width, y * img.current.height);\n                }\n            });\n            ctx.closePath();\n            ctx.stroke();\n        }\n    }, [\n        currentPolygon\n    ]);\n    const drawImageAndPolygons = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.save();\n        ctx.translate(startPos.x, startPos.y);\n        ctx.scale(scaleFactor, scaleFactor);\n        ctx.drawImage(img.current, 0, 0);\n        // polygons.forEach(polygon => drawPolygon(polygon, ctx));\n        polygons.forEach((polygon)=>{\n            if (polygon.prediction >= predictionRange) {\n                drawPolygon(polygon, ctx);\n            }\n        });\n        drawCurrentPolygon(ctx);\n        // polygons.forEach((polygon, index) => {\n        //   drawPolygon(polygon, ctx, index);\n        // });\n        // tags.forEach(tag => {\n        //   ctx.fillText(tag.text, tag.x, tag.y);\n        // });\n        ctx.restore();\n    }, [\n        polygons,\n        drawPolygon,\n        startPos,\n        scaleFactor\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        img.current.src = \"/test58.jpg\";\n        img.current.onload = ()=>{\n            drawImageAndPolygons();\n        };\n    }, [\n        drawImageAndPolygons\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        drawImageAndPolygons();\n    }, [\n        predictionRange,\n        drawImageAndPolygons\n    ]);\n    // const isNearStartPoint = (point, startPoint) => {\n    //   const distance = Math.sqrt(Math.pow(point[0] - startPoint[0], 2) + Math.pow(point[1] - startPoint[1], 2));\n    //   return distance < 0.01;\n    // };\n    // const drawCurrentPolygonWithNewPoint = useCallback((newPoint) => {\n    //   const canvas = canvasRef.current;\n    //   const ctx = canvas.getContext('2d');\n    //   drawCurrentPolygon(ctx);\n    //   if (currentPolygon.length > 0) {\n    //     ctx.beginPath();\n    //     currentPolygon.forEach((point, index) => {\n    //       const adjustedX = point[0] * canvas.width;\n    //       const adjustedY = point[1] * canvas.height;\n    //       if (index === 0) {\n    //         ctx.moveTo(adjustedX, adjustedY);\n    //       } else {\n    //         ctx.lineTo(adjustedX, adjustedY);\n    //       }\n    //       console.log(adjustedX, adjustedY);\n    //     });\n    //     ctx.lineTo(newPoint[0] * canvas.width, newPoint[1] * canvas.height);\n    //     ctx.stroke();\n    //   }\n    // }, [currentPolygon, drawCurrentPolygon]);\n    const distanceBetween = (x1, y1, x2, y2)=>{\n        return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    };\n    const handleCanvasClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e)=>{\n        if (showModal) {\n            return null;\n        }\n        const completionThreshold = 0.007;\n        const rect = canvasRef.current.getBoundingClientRect();\n        const scaledX = (e.clientX - rect.left - startPos.x) / scaleFactor;\n        const scaledY = (e.clientY - rect.top - startPos.y) / scaleFactor;\n        const x = scaledX / img.current.width;\n        const y = scaledY / img.current.height;\n        const distance = currentPolygon.length > 0 ? distanceBetween(x, y, currentPolygon[0][0], currentPolygon[0][1]) : Number.MAX_VALUE;\n        setCurrentPolygon((prev)=>[\n                ...prev,\n                [\n                    x,\n                    y\n                ]\n            ]);\n        if (currentPolygon.length > 2 && distance < completionThreshold) {\n            const newPolygon = {\n                labelIndex: 12,\n                // points: [...currentPolygon, currentPolygon[0]],\n                points: [\n                    ...currentPolygon,\n                    [\n                        x,\n                        y\n                    ]\n                ],\n                prediction: 0.95,\n                color: getColorForPolygon(12)\n            };\n            setPolygons((prev)=>[\n                    ...prev,\n                    newPolygon\n                ]);\n            setCurrentPolygon([]);\n        }\n        let foundPolygonIndex = null;\n        polygons.forEach((polygon, index)=>{\n            if (polygon.prediction >= predictionRange) {\n                foundPolygonIndex = index;\n            }\n        });\n        setSelectedPolygonIndex(foundPolygonIndex !== null ? foundPolygonIndex : \"None\");\n    }, [\n        showModal,\n        currentPolygon,\n        polygons,\n        startPos,\n        scaleFactor,\n        img\n    ]);\n    const handleCanvasRightClick = (e)=>{\n        e.preventDefault();\n        if (currentPolygon.length > 0) {\n            setCurrentPolygon([]);\n            return;\n        }\n        setShowModal(true);\n        setModalPos({\n            x: e.clientX + window.scrollX,\n            y: e.clientY + window.scrollY\n        });\n        const rect = canvasRef.current.getBoundingClientRect();\n        const mouseX = (e.clientX - rect.left - startPos.x) / scaleFactor;\n        const mouseY = (e.clientY - rect.top - startPos.y) / scaleFactor;\n        let foundPolygonIndex = null;\n        polygons.forEach((polygon, index)=>{\n            if (isMouseInPolygon(mouseX, mouseY, polygon)) {\n                foundPolygonIndex = index;\n                setModalPolygonIndex(index);\n            }\n        });\n        setModalPolygonIndex(foundPolygonIndex);\n        if (foundPolygonIndex !== null) {\n            setModalPolygonIndex(foundPolygonIndex);\n        } else {\n            setCurrentPolygon([]);\n        }\n    };\n    const isMouseInPolygon = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((mouseX, mouseY, polygon)=>{\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.save();\n        ctx.setTransform(scaleFactor, 0, 0, scaleFactor, startPos.x, startPos.y);\n        ctx.beginPath();\n        if (polygon && Array.isArray(polygon.points)) {\n            polygon.points.forEach((param, index)=>{\n                let [x, y] = param;\n                const polyX = x * img.current.width;\n                const polyY = y * img.current.height;\n                if (index === 0) {\n                    ctx.moveTo(polyX, polyY);\n                } else {\n                    ctx.lineTo(polyX, polyY);\n                }\n            });\n        }\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        const isInPath = ctx.isPointInPath(mouseX, mouseY);\n        ctx.restore();\n        return isInPath;\n    }, [\n        scaleFactor,\n        startPos,\n        img\n    ]);\n    const handleMouseDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e)=>{\n        if (e.button === 1) {\n            setIsWheelDown(true);\n            dragStart.current = {\n                x: e.clientX,\n                y: e.clientY\n            };\n            e.currentTarget.style.cursor = \"grabbing\";\n        } else if (e.button === 0) {\n            const rect = canvasRef.current.getBoundingClientRect();\n            const mouseX = e.clientX - rect.left;\n            const mouseY = e.clientY - rect.top;\n            let foundPolygon = false;\n            polygons.forEach((polygon)=>{\n                if (isMouseInPolygon(mouseX, mouseY, polygon)) {\n                    setSelectedPolygonIndex(polygon.labelIndex);\n                    foundPolygon = true;\n                }\n            });\n            if (!foundPolygon) {\n                setSelectedPolygonIndex(\"None\");\n            }\n        }\n    }, [\n        polygons,\n        isWheelDown\n    ]);\n    const handleMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e)=>{\n        if (isWheelDown) {\n            const newOffset = {\n                x: startPos.x + (e.clientX - dragStart.current.x),\n                y: startPos.y + (e.clientY - dragStart.current.y)\n            };\n            setStartPos(newOffset);\n            dragStart.current = {\n                x: e.clientX,\n                y: e.clientY\n            };\n            e.preventDefault();\n        } else {\n            const rect = canvasRef.current.getBoundingClientRect();\n            const mouseX = e.clientX - rect.left;\n            const mouseY = e.clientY - rect.top;\n            let foundPolygon = false;\n            polygons.forEach((polygon)=>{\n                if (isMouseInPolygon(mouseX, mouseY, polygon)) {\n                    setSelectedPolygonIndex(polygon.labelIndex);\n                    foundPolygon = true;\n                }\n            });\n            if (!foundPolygon) {\n                setSelectedPolygonIndex(\"None\");\n            }\n        }\n    }, [\n        isWheelDown,\n        polygons,\n        startPos\n    ]);\n    const handleMouseUp = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e)=>{\n        if (e.button === 1) {\n            e.preventDefault();\n            setIsWheelDown(false);\n            e.currentTarget.style.cursor = \"default\";\n        }\n    }, []);\n    const handleWheel = (e)=>{\n        if (!isWheelDown) {\n            const delta = Math.sign(e.deltaY);\n            setScaleFactor((prevScale)=>{\n                let newScale = delta > 0 ? prevScale + 0.1 : Math.max(prevScale - 0.1, 0.1);\n                return newScale;\n            });\n        }\n    };\n    const handleFileChange = (e)=>{\n        const file = e.target.files[0];\n        if (!file) {\n            return;\n        }\n        const reader = new FileReader();\n        reader.onload = (e)=>{\n            const content = e.target.result;\n            setFileContent(content);\n            processFileContent(content);\n        };\n        reader.readAsText(file);\n    };\n    const processFileContent = (content)=>{\n        const jsonData = JSON.parse(content);\n        const loadedPolygons = Object.values(jsonData).map((item)=>{\n            const itemStr = typeof item === \"string\" ? item.trim() : JSON.stringify(item).trim();\n            const parts = itemStr.split(\" \");\n            const labelIndex = parseInt(parts[0], 10);\n            const predictionValue = parseFloat(parts[parts.length - 1]);\n            const points = parts.slice(1, -1).map((part, index, array)=>index % 2 === 0 ? [\n                    parseFloat(array[index]),\n                    parseFloat(array[index + 1])\n                ] : null).filter((point)=>point);\n            const color = getColorForPolygon(labelIndex);\n            return {\n                labelIndex,\n                points,\n                prediction: predictionValue,\n                color\n            };\n        });\n        setPolygons(loadedPolygons);\n    };\n    const handleDeletePolygon = ()=>{\n        if (modalPolygonIndex !== null) {\n            setPolygons((prev)=>prev.filter((_, index)=>index !== modalPolygonIndex));\n        }\n        setShowModal(false);\n        setModalPolygonIndex(null);\n    };\n    const handleModalInputUpdate = (modalInputValue)=>{\n        if (modalPolygonIndex !== null) {\n            const updatedPolygons = polygons.map((polygon, index)=>{\n                if (index === modalPolygonIndex) {\n                    return {\n                        ...polygon,\n                        tag: modalInputValue.tag,\n                        description: modalInputValue.description\n                    };\n                }\n                return polygon;\n            });\n            setPolygons(updatedPolygons);\n        }\n        setShowModal(false);\n    };\n    return /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"input\", {\n                type: \"file\",\n                onChange: handleFileChange\n            }, void 0, false, {\n                fileName: \"/Users/iinjae/Desktop/drawing-space/src/app/page.tsx\",\n                lineNumber: 425,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"p\", {\n                children: [\n                    \"예측값 범위: \",\n                    /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"span\", {\n                        children: predictionRange\n                    }, void 0, false, {\n                        fileName: \"/Users/iinjae/Desktop/drawing-space/src/app/page.tsx\",\n                        lineNumber: 426,\n                        columnNumber: 18\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/iinjae/Desktop/drawing-space/src/app/page.tsx\",\n                lineNumber: 426,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"input\", {\n                type: \"range\",\n                min: \"0\",\n                max: \"1\",\n                step: \"0.01\",\n                value: predictionRange,\n                onChange: (e)=>setPredictionRange(e.target.value)\n            }, void 0, false, {\n                fileName: \"/Users/iinjae/Desktop/drawing-space/src/app/page.tsx\",\n                lineNumber: 427,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"canvas\", {\n                ref: canvasRef,\n                width: 700,\n                height: 900,\n                onMouseDown: handleMouseDown,\n                onMouseUp: handleMouseUp,\n                onMouseMove: handleMouseMove,\n                onClick: handleCanvasClick,\n                onContextMenu: handleCanvasRightClick,\n                onWheel: handleWheel\n            }, void 0, false, {\n                fileName: \"/Users/iinjae/Desktop/drawing-space/src/app/page.tsx\",\n                lineNumber: 435,\n                columnNumber: 7\n            }, undefined),\n            showModal && /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_components_CanvasModal__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {\n                modalPos: modalPos,\n                onDelete: handleDeletePolygon,\n                onModalInputUpdate: handleModalInputUpdate,\n                setShowModal: setShowModal,\n                currentData: polygons[modalPolygonIndex]\n            }, void 0, false, {\n                fileName: \"/Users/iinjae/Desktop/drawing-space/src/app/page.tsx\",\n                lineNumber: 447,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"p\", {\n                children: [\n                    \"선택된 폴리곤 라벨 인덱스: \",\n                    /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"span\", {\n                        children: selectedPolygonIndex\n                    }, void 0, false, {\n                        fileName: \"/Users/iinjae/Desktop/drawing-space/src/app/page.tsx\",\n                        lineNumber: 455,\n                        columnNumber: 26\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/iinjae/Desktop/drawing-space/src/app/page.tsx\",\n                lineNumber: 455,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"button\", {\n                onClick: ()=>setScaleFactor(scaleFactor + 0.1),\n                children: \"확대\"\n            }, void 0, false, {\n                fileName: \"/Users/iinjae/Desktop/drawing-space/src/app/page.tsx\",\n                lineNumber: 456,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"button\", {\n                onClick: ()=>setScaleFactor(scaleFactor - 0.1),\n                children: \"축소\"\n            }, void 0, false, {\n                fileName: \"/Users/iinjae/Desktop/drawing-space/src/app/page.tsx\",\n                lineNumber: 457,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/iinjae/Desktop/drawing-space/src/app/page.tsx\",\n        lineNumber: 424,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Canvas, \"cVhQD3+90tFGiZP2aLnWjxiDubo=\");\n_c = Canvas;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Canvas);\nvar _c;\n$RefreshReg$(_c, \"Canvas\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ })

});